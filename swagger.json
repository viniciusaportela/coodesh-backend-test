{
  "openapi": "3.0.0",
  "info": {
    "description": "Space Flight Articles API, based on [Spaceflight News API](https://api.spaceflightnewsapi.net/v3/documentation)",
    "version": "1.0.0",
    "title": "Space Flight Articles",
    "contact": {
      "email": "vinicius.portela.stm@gmail.com"
    }
  },
  "paths": {
    "/": {
      "get": {
        "tags": ["Root"],
        "summary": "Returns Back-end Challenge 2021 üèÖ - Space Flight News",
        "responses": {
          "200": {
            "description": "Returns Back-end Challenge 2021 üèÖ - Space Flight News"
          }
        }
      }
    },
    "/articles": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "default": 10,
              "type": "integer"
            },
            "description": "The numbers of items to return. Can't be greater than 1000"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "default": 1,
              "type": "integer"
            },
            "description": "Current page (starts on 1)"
          }
        ],
        "tags": ["Articles"],
        "summary": "Get a list of articles",
        "responses": {
          "200": {
            "description": "A list of articles",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Articles"],
        "summary": "Creates an article",
        "description": "Creates an article. The **events** should be an array of event ids and the **launches** should be an array of launch ids. You should create the events and launches before using it. Use the `/events` and `/launches` endpoints for that.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ArticleInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Created successfully"
          },
          "409": {
            "description": "Already Exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlreadyExists"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/articles/{articleId}": {
      "get": {
        "parameters": [
          {
            "name": "articleId",
            "in": "path",
            "description": "ID of article",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["Articles"],
        "summary": "Get an article by ID",
        "responses": {
          "200": {
            "description": "An article",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Article"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          }
        }
      },
      "put": {
        "parameters": [
          {
            "name": "articleId",
            "in": "path",
            "description": "ID of article",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["Articles"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ArticleUpdateInput"
              }
            }
          }
        },
        "summary": "Update an article by ID",
        "responses": {
          "200": {
            "description": "Updated successfully"
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "parameters": [
          {
            "name": "articleId",
            "in": "path",
            "description": "ID of article",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["Articles"],
        "summary": "Delete an article by ID",
        "responses": {
          "200": {
            "description": "Deleted successfully"
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          }
        }
      }
    },
    "/events": {
      "post": {
        "tags": ["Events"],
        "summary": "Creates an event",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Event"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Created successfully"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/events/{eventId}": {
      "delete": {
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "ID of event",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["Events"],
        "summary": "Delete an event by ID",
        "responses": {
          "200": {
            "description": "Deleted successfully"
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          }
        }
      },
      "put": {
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "ID of event",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["Events"],
        "summary": "Update an event by ID",
        "responses": {
          "200": {
            "description": "Updated successfully"
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/launches": {
      "post": {
        "tags": ["Launches"],
        "summary": "Creates a launch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Launch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Created successfully"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/launches/{launchId}": {
      "delete": {
        "parameters": [
          {
            "name": "launchId",
            "in": "path",
            "description": "ID of launch",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["Launches"],
        "summary": "Delete an launch by ID",
        "responses": {
          "200": {
            "description": "Deleted successfully"
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          }
        }
      },
      "put": {
        "parameters": [
          {
            "name": "launchId",
            "in": "path",
            "description": "ID of launch",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["Launches"],
        "summary": "Update an launch by ID",
        "responses": {
          "200": {
            "description": "Updated successfully"
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "NotFound": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "example": "not_found"
          },
          "code": {
            "type": "integer",
            "example": 404
          },
          "description": {
            "type": "string",
            "example": "description"
          }
        }
      },
      "AlreadyExists": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "example": "already_exists"
          },
          "code": {
            "type": "integer",
            "example": 409
          },
          "description": {
            "type": "string",
            "example": "description"
          }
        }
      },
      "ValidationError": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "example": "validation_error"
          },
          "code": {
            "type": "integer",
            "example": 422
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "errorCode": {
                  "type": "string",
                  "example": "should_be_string"
                },
                "field": {
                  "type": "string",
                  "example": "title"
                }
              }
            }
          }
        }
      },
      "ArticleInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 12
          },
          "featured": {
            "type": "boolean",
            "example": false
          },
          "title": {
            "type": "string",
            "example": "title"
          },
          "url": {
            "type": "string",
            "example": "https://example.com"
          },
          "imageUrl": {
            "type": "string",
            "example": "https://example.com"
          },
          "newsSite": {
            "type": "string",
            "example": "newsSite"
          },
          "summary": {
            "type": "string",
            "example": "summary summary"
          },
          "publishedAt": {
            "type": "string",
            "example": "2022-01-09T22:13:10.000Z"
          },
          "events": {
            "type": "array",
            "items": {
              "type": "integer",
              "example": 1
            }
          },
          "launches": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "c660df6f-7e33-4c90-a0f5-b27c8cb4c974"
            }
          }
        }
      },
      "ArticleUpdateInput": {
        "type": "object",
        "properties": {
          "featured": {
            "type": "boolean",
            "example": false
          },
          "title": {
            "type": "string",
            "example": "title"
          },
          "url": {
            "type": "string",
            "example": "https://example.com"
          },
          "imageUrl": {
            "type": "string",
            "example": "https://example.com"
          },
          "newsSite": {
            "type": "string",
            "example": "newsSite"
          },
          "summary": {
            "type": "string",
            "example": "summary summary"
          },
          "publishedAt": {
            "type": "string",
            "example": "2022-01-09T22:13:10.000Z"
          },
          "events": {
            "type": "array",
            "items": {
              "type": "integer",
              "example": 1
            }
          },
          "launches": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "c660df6f-7e33-4c90-a0f5-b27c8cb4c974"
            }
          }
        }
      },
      "Article": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 12
          },
          "featured": {
            "type": "boolean",
            "example": false
          },
          "title": {
            "type": "string",
            "example": "title"
          },
          "url": {
            "type": "string",
            "example": "https://example.com"
          },
          "imageUrl": {
            "type": "string",
            "example": "https://example.com"
          },
          "newsSite": {
            "type": "string",
            "example": "newsSite"
          },
          "summary": {
            "type": "string",
            "example": "summary summary"
          },
          "publishedAt": {
            "type": "string",
            "example": "2022-01-09T22:13:10.000Z"
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Event"
            }
          },
          "launches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Launch"
            }
          }
        }
      },
      "Event": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 2
          },
          "provider": {
            "type": "string",
            "example": "provider"
          }
        }
      },
      "Launch": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "c660df6f-7e33-4c90-a0f5-b27c8cb4c974"
          },
          "provider": {
            "type": "string",
            "example": "provider"
          }
        }
      }
    }
  }
}
